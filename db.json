{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/shoka/source/images/404.png","path":"images/404.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/failure.ico","path":"images/failure.ico","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/paypal.png","path":"images/paypal.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/play_disc.png","path":"images/play_disc.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/play_needle.png","path":"images/play_needle.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/search.png","path":"images/search.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/app.styl","path":"css/app.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/comment.styl","path":"css/comment.styl","modified":0,"renderable":1},{"_id":"themes/shoka/source/css/mermaid.styl","path":"css/mermaid.styl","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/my-first-post.md","hash":"c0d69dce6a0894fc810ce863b01f34d7672010e1","modified":1698366134000},{"_id":"source/.DS_Store","hash":"1e6f218e8370ede75382f191edb58675fb7114b8","modified":1698358465218},{"_id":"source/_posts/.DS_Store","hash":"03cc6e55d36db4a43d690b5baad99eb10726c350","modified":1650064391899},{"_id":"themes/shoka/.DS_Store","hash":"4119f4afe4e74ab7e84d5d9a724085acd398cf04","modified":1644068211190},{"_id":"themes/shoka/.editorconfig","hash":"3036325288c2bdf484691e761250264acdf9916c","modified":1644063063815},{"_id":"themes/shoka/LICENSE","hash":"64ce70bfac4eb5d7b3d55f220f6fc8fb61e94461","modified":1644063063815},{"_id":"themes/shoka/.gitignore","hash":"c8e234f2878f92629bed20cd907f5fd1e63ede3d","modified":1644063063815},{"_id":"themes/shoka/package.json","hash":"65b4458e1b9e8b3ee9a268e51312b9811d4edbc7","modified":1644063063850},{"_id":"themes/shoka/README.md","hash":"31245e7df1b69b6b1bfeb5a62686dec762b3e3b4","modified":1644063063815},{"_id":"themes/shoka/_images.yml","hash":"e091562d03506c08e05887cff04eb9f69cf2f504","modified":1644063063816},{"_id":"themes/shoka/example/_config.shoka.yml","hash":"aaad535f5fa11929dc882e3a77859ae8588344ae","modified":1644063063816},{"_id":"themes/shoka/example/package.json","hash":"41faaf74c9feab9cdfe0fe1551fa0f784ffb926f","modified":1644063063816},{"_id":"themes/shoka/_config.yml","hash":"c47809709d86e402b306fc2f123e3e7c7dd54771","modified":1644063063816},{"_id":"themes/shoka/example/_config.yml","hash":"b4f179c622ff673729f3cdba3cde69ded750b776","modified":1644063063816},{"_id":"themes/shoka/languages/README.md","hash":"121a3ffd4db36ca68a52214b292110e589c068de","modified":1644063063838},{"_id":"themes/shoka/languages/default.yml","hash":"9107d4b03be45561a407981dd08f49816963e365","modified":1644063063839},{"_id":"themes/shoka/languages/ja.yml","hash":"97a3c8561e4c6e6fd37708276147ddcc5009176d","modified":1644063063839},{"_id":"themes/shoka/languages/zh-CN.yml","hash":"286d02a984ffc85123be119f66eb3df6991ce0b9","modified":1644063063839},{"_id":"themes/shoka/languages/zh-TW.yml","hash":"41321b5f3fb9b6d5b789f3ab14201ecc9981ddda","modified":1644063063840},{"_id":"themes/shoka/languages/zh-HK.yml","hash":"5c73a4dbb3bc99817bf1f2c9b438c2913cc5b0b9","modified":1644063063840},{"_id":"themes/shoka/layout/index.njk","hash":"72bf1a78d915fd63b9664181c7deb9a87e1f7f67","modified":1644063063849},{"_id":"themes/shoka/layout/page.njk","hash":"b22327cb7ea5daf1cf095da70b8376c9cd89e70b","modified":1644063063850},{"_id":"themes/shoka/scripts/filters/locals.js","hash":"45c5c30d70b033edd7595d4cb847b7c4ccbf81de","modified":1644063063853},{"_id":"themes/shoka/layout/category.njk","hash":"ebc83df1ff0115e003e5a3e6a04278ff3ec63acf","modified":1644063063849},{"_id":"themes/shoka/layout/tag.njk","hash":"6dc9840915842de3ab7f844171696b8147e6c65f","modified":1644063063850},{"_id":"themes/shoka/scripts/filters/post.js","hash":"37cc926d7d11e6c2ecc14785ae32140541d0fd43","modified":1644063063853},{"_id":"themes/shoka/scripts/generaters/archive.js","hash":"a548c9ca74c6757382a306f0b1e54c5400429083","modified":1644063063854},{"_id":"themes/shoka/scripts/generaters/config.js","hash":"e957d60c0e0265cc31eb7e8bfe71ff457c458d11","modified":1644063063854},{"_id":"themes/shoka/scripts/generaters/index.js","hash":"b9148d7457ad11946334c321fa35d911f347425a","modified":1644063063854},{"_id":"themes/shoka/layout/post.njk","hash":"9344c9bc310ac6a9dd7d1c8abbd3a3e4de1ec766","modified":1644063063850},{"_id":"themes/shoka/scripts/generaters/images.js","hash":"c16389f4e64434f8c91ac6a0a4da607a274f7321","modified":1644063063854},{"_id":"themes/shoka/languages/en.yml","hash":"8b0d536a0ff85125916ceae22495359ba4f05cfc","modified":1644068664425},{"_id":"themes/shoka/scripts/generaters/pages.js","hash":"b83097275b0327b0c1e0ebfb2a40640c8096c088","modified":1644063063855},{"_id":"themes/shoka/layout/archive.njk","hash":"ec7077303a4afa9600aa94286a6132b1376742e0","modified":1644063063849},{"_id":"themes/shoka/scripts/generaters/script.js","hash":"7994f9842ec8734fc6db516c5b8b7820896341ec","modified":1644063063855},{"_id":"themes/shoka/scripts/helpers/asset.js","hash":"93fa2f7c40491d3175621b5ef0aaa174b528bcd9","modified":1644063063855},{"_id":"themes/shoka/scripts/helpers/engine.js","hash":"4b2c5cedf96a4ab57668f4c3066de9d2c4abb01c","modified":1644063063855},{"_id":"themes/shoka/scripts/helpers/list_categories.js","hash":"5a1a2a51731c2a1d45173bd7bfb5c5e3fc46eddf","modified":1644063063856},{"_id":"themes/shoka/scripts/renderer/njk.js","hash":"f3e76bdb1aabc7a04fda4c123b598fa2c24dfc46","modified":1644063063856},{"_id":"themes/shoka/scripts/tags/links.js","hash":"16349da915f03d5b3bdc0efbb1eb1c88aa4db3d1","modified":1644063063857},{"_id":"themes/shoka/scripts/tags/media.js","hash":"ca4ae726a4a585b17998aa43b1975da7ca590cc1","modified":1644063063857},{"_id":"themes/shoka/layout/_alternate/atom.ejs","hash":"b9763bc59b0e18ec13c2c9b90bc1be9e34da166a","modified":1644063063840},{"_id":"themes/shoka/layout/_alternate/json.ejs","hash":"343b618ee9b16da33b51280c2fab42ad29ae39eb","modified":1644063063840},{"_id":"themes/shoka/layout/_alternate/rss.ejs","hash":"ed5c14dc38bd24ede842c7b2356176d20e759c56","modified":1644063063841},{"_id":"themes/shoka/layout/_macro/breadcrumb.njk","hash":"1c464f539d3349baf1e2b4fcc1383ee90d964287","modified":1644063063841},{"_id":"themes/shoka/layout/_macro/postmeta.njk","hash":"0f2d1cbcca2ad19186b90a6db08a5159407a3178","modified":1644063063842},{"_id":"themes/shoka/layout/_macro/comment.njk","hash":"7331492119ccaf0ed3034f6118a01f31426be972","modified":1644063063842},{"_id":"themes/shoka/layout/_macro/card.njk","hash":"d189b55fa55a83af1bec2d1f822b8827b0f81c01","modified":1644063063841},{"_id":"themes/shoka/layout/_macro/segment.njk","hash":"532df83485ee9bab7a9c919058d3ab7be65c3f18","modified":1644063063842},{"_id":"themes/shoka/layout/_macro/sidebar.njk","hash":"e7fada626a89769f9f8b4d94efb702ab5ff0f138","modified":1644063063842},{"_id":"themes/shoka/layout/_partials/footer.njk","hash":"09600bea242ea731820d18ef1a9b0346e22dc82f","modified":1644063063843},{"_id":"themes/shoka/layout/_partials/header.njk","hash":"7f7a94261afbad87bca7901c9790907137f35293","modified":1644063063844},{"_id":"themes/shoka/layout/_partials/layout.njk","hash":"0c3d3aee4da15bdfe39e502a0713f9e4d3ae6cf8","modified":1644063063844},{"_id":"themes/shoka/layout/_macro/widgets.njk","hash":"5abd33cb1febd7b27ca050ba75aa0966c4f89d53","modified":1644063063842},{"_id":"themes/shoka/layout/_partials/pagination.njk","hash":"8960c767d3c5a7beaef5f6040310c3776b757f03","modified":1644063063844},{"_id":"themes/shoka/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1644063063886},{"_id":"themes/shoka/source/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1644063063886},{"_id":"themes/shoka/source/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1644063063887},{"_id":"themes/shoka/source/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1644063063887},{"_id":"themes/shoka/source/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1644063063888},{"_id":"themes/shoka/source/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1644063063888},{"_id":"themes/shoka/source/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1644063063889},{"_id":"themes/shoka/source/images/logo.svg","hash":"48014a7148fde766848eb4701c8df421a17cb74b","modified":1644063063888},{"_id":"themes/shoka/source/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1644063063889},{"_id":"themes/shoka/source/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1644063063889},{"_id":"themes/shoka/source/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1644063063890},{"_id":"themes/shoka/source/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1644063063890},{"_id":"themes/shoka/source/css/_colors.styl","hash":"42a556c1544394b4cd0a3ce526c9a30b08d5952e","modified":1644063063860},{"_id":"themes/shoka/source/css/_iconfont.styl","hash":"af1619072315acc24b11b2dd71a8335f5d466d2c","modified":1644063063884},{"_id":"themes/shoka/source/css/_mixins.styl","hash":"858e238acb07a242f901f1b59f69d323c83bf5ea","modified":1644063063885},{"_id":"themes/shoka/source/css/app.styl","hash":"46312264dc3878bc2bd54e6d7171081bfa7477d6","modified":1644063063885},{"_id":"themes/shoka/source/css/comment.styl","hash":"e83d7dfc7b789342050a41ba5a8482f0875c18bc","modified":1644063063885},{"_id":"themes/shoka/source/css/mermaid.styl","hash":"7720ca8fc84b975d95fd11d7971f125aa3062a23","modified":1644063063885},{"_id":"themes/shoka/example/source/_data/custom.styl","hash":"a6107618e68ea2735eabfc6d09aec2b6ff61f9fb","modified":1644063063817},{"_id":"themes/shoka/source/css/_variables.styl","hash":"36069cddfa7d3f2d852d20c9e0e9ebf947e7e287","modified":1644063063885},{"_id":"themes/shoka/example/source/_data/images.yml","hash":"e091562d03506c08e05887cff04eb9f69cf2f504","modified":1644063063818},{"_id":"themes/shoka/example/source/_data/languages.yml","hash":"b6b8b07073cab641e99fe0706345dc72d24dade3","modified":1644063063818},{"_id":"themes/shoka/example/source/_posts/categories.md","hash":"c023118431e400a213f568fd572d2da1eb42bff4","modified":1644063063819},{"_id":"themes/shoka/example/source/_posts/elements.md","hash":"c74ed1974348870b22053f4ef56623be9f548a7e","modified":1644063063824},{"_id":"themes/shoka/example/source/_data/iconfont.styl","hash":"45d1f2d09e3769ffe8d371a314d345b70b00015a","modified":1644063063817},{"_id":"themes/shoka/example/source/_posts/excerpts.md","hash":"64dabd6382092c9424de013e1b1e24be2a6d73b8","modified":1644063063824},{"_id":"themes/shoka/example/source/_posts/gallery-post.md","hash":"9d45e961f22be7accb472fc96fb27988689f8575","modified":1644063063824},{"_id":"themes/shoka/example/source/_posts/hello-world.md","hash":"56fc3161a3ab82f4e1ad79575e3ad5ab85275150","modified":1644063063825},{"_id":"themes/shoka/example/source/_posts/images.md","hash":"84306a949d26a0ed97073520bc7969de363e6750","modified":1644063063825},{"_id":"themes/shoka/example/source/_posts/code-highlight.md","hash":"334e0e84be834318e2b00fc0ef665e49d59ec47f","modified":1644063063819},{"_id":"themes/shoka/example/source/_data/colors.styl","hash":"f086d11a45d14a3b8454b98b11fbe347f097835d","modified":1644063063817},{"_id":"themes/shoka/example/source/_posts/link-post-without-title.md","hash":"13d0c37796245a515dfcee056beea17ed8050c63","modified":1644063063825},{"_id":"themes/shoka/example/source/_posts/link-post.md","hash":"66ce534bb1346f941cfd282de2c8beaf41f8d963","modified":1644063063825},{"_id":"themes/shoka/example/source/_posts/long-title.md","hash":"0d101b388a23e6609c121ff00b4dfd14df1e9938","modified":1644063063826},{"_id":"themes/shoka/example/source/_posts/no-title.md","hash":"77ac3cd146d1a851f7f42e2f3f3488da37b129de","modified":1644063063826},{"_id":"themes/shoka/example/source/_posts/tag-plugins.md","hash":"668f6e9c831c3eb353d64654676231d69f8e511e","modified":1644063063827},{"_id":"themes/shoka/example/source/_posts/tags.md","hash":"22452f7286e135658aabe870143c5550e5648143","modified":1644063063827},{"_id":"themes/shoka/example/source/_posts/videos.md","hash":"c52593a7e5a49b894003cc92446b5be194c1edf4","modified":1644063063827},{"_id":"themes/shoka/example/source/_posts/日本語テスト.md","hash":"9dde036d1b8caff86e1155c3df3283a9f55996e3","modified":1644063063828},{"_id":"themes/shoka/example/source/friends/_data.yml","hash":"501be211d5f02bfd1a95a80f5e04a0fff5173a16","modified":1644063063838},{"_id":"themes/shoka/example/source/_posts/markdown.md","hash":"390c6ee8c55abe364e1c4728045b6c995266d770","modified":1644063063826},{"_id":"themes/shoka/example/source/_posts/中文測試.md","hash":"dc6e9310fa1c331bd61c63aef7c8a87dfa18b8cd","modified":1644063063827},{"_id":"themes/shoka/example/source/friends/index.md","hash":"b4a314357a650429ceb8b6d62b0bd54bf6289a8a","modified":1644063063838},{"_id":"themes/shoka/layout/_partials/head/head.njk","hash":"d02e0ddada3e6c4b4420a5386bc1304031b702a2","modified":1644063063843},{"_id":"themes/shoka/layout/_partials/head/head_unique.njk","hash":"953812d48987b3491ea011d2b50cf7bef07f3742","modified":1644063063843},{"_id":"themes/shoka/layout/_partials/third-party/baidu-analytics.njk","hash":"a22788fbc12186ddd8bbd963146177cdaa95646c","modified":1644063063849},{"_id":"themes/shoka/layout/_partials/sidebar/overview.njk","hash":"11bab5261ce71de61cdad88db1351269ddb58946","modified":1644063063848},{"_id":"themes/shoka/layout/_partials/sidebar/menu.njk","hash":"6137a83379a61af0eef4d6f92e15f0d488c9f36c","modified":1644063063848},{"_id":"themes/shoka/layout/_partials/post/post.njk","hash":"8ed321922aae0a078dc0e1ec49a619dd1b222017","modified":1644063063847},{"_id":"themes/shoka/layout/_partials/post/reward.njk","hash":"38f0a30361d6354b3a44183a12497c4e31861017","modified":1644063063848},{"_id":"themes/shoka/layout/_partials/post/copyright.njk","hash":"608d2f2f8dccf2ad2fb1ac428f1c11446058101e","modified":1644063063845},{"_id":"themes/shoka/source/js/_app/dom.js","hash":"a917bfdae26c263cb9de962f88b11502907d9eb7","modified":1644063063891},{"_id":"themes/shoka/layout/_partials/post/footer.njk","hash":"b0c1cfe766b82551939c52197473adbdf5e33401","modified":1644063063845},{"_id":"themes/shoka/layout/_partials/post/nav.njk","hash":"964963a15cc242b34310858ae14bd1a0bed06fe5","modified":1644063063846},{"_id":"themes/shoka/source/js/_app/fireworks.js","hash":"077572d0714b5c6801ae4598df7a85936296a77a","modified":1644063063891},{"_id":"themes/shoka/source/js/_app/global.js","hash":"54b49931de5153e9176c47faa35c172e60c7d450","modified":1644063063891},{"_id":"themes/shoka/source/js/_app/page.js","hash":"58e0eba9d70c92d61b41024d4f03fadcf5fa7873","modified":1644063063892},{"_id":"themes/shoka/source/js/_app/pjax.js","hash":"2364ec1d3ed0e76045af015843cfbef5db6a3eb1","modified":1644063063892},{"_id":"themes/shoka/source/js/_app/player.js","hash":"8ae60451ad0dc19699f5a9a54d00924a04c6d588","modified":1644063063893},{"_id":"themes/shoka/source/js/_app/utils.js","hash":"2f01f5b4dde29324e678c8e6c7800e32e489b8fe","modified":1644063063893},{"_id":"themes/shoka/source/css/_common/scaffolding/animate.styl","hash":"3bdb5855ccc98b11d8810ead8c082bcaf5f39360","modified":1644063063881},{"_id":"themes/shoka/source/js/_app/sidebar.js","hash":"b24c660bb79a376f8daf7a00984db990a544581d","modified":1644063063893},{"_id":"themes/shoka/source/css/_common/components/components.styl","hash":"1abcd0854142d1415af647c3d6b5d33de505d00d","modified":1644063063860},{"_id":"themes/shoka/source/css/_common/scaffolding/base.styl","hash":"c0612edeb3ec3758f4826c2ca5dadb8c28df7086","modified":1644063063881},{"_id":"themes/shoka/source/css/_common/scaffolding/buttons.styl","hash":"aab14e7fe7c466576b3d70c741d2526364d07874","modified":1644063063881},{"_id":"themes/shoka/source/css/_common/scaffolding/pagination.styl","hash":"7632764beb8d937ec6a4dcf08a9b5e9a2d904845","modified":1644063063882},{"_id":"themes/shoka/source/css/_common/scaffolding/ribbon.styl","hash":"3ccaed5ca1497c0b6eeaaafb777db9c67ce2121e","modified":1644063063883},{"_id":"themes/shoka/source/css/_common/scaffolding/divider.styl","hash":"c2dfeadb72a7c898a455e163f11ee17c6b3941bb","modified":1644063063881},{"_id":"themes/shoka/source/css/_common/scaffolding/scrollbar.styl","hash":"0b65e121550b1c816e021f23a54f161a30ab29a2","modified":1644063063883},{"_id":"themes/shoka/source/css/_common/scaffolding/scaffolding.styl","hash":"2a54e8ddf6cf14fec00b010d5ced577670bd8027","modified":1644063063883},{"_id":"themes/shoka/source/css/_common/scaffolding/iconfont.styl","hash":"45d1f2d09e3769ffe8d371a314d345b70b00015a","modified":1644063063882},{"_id":"themes/shoka/source/css/_common/scaffolding/normalize.styl","hash":"27e12cd7619f80f0df4761201d1b6b9366262270","modified":1644063063882},{"_id":"themes/shoka/source/css/_common/scaffolding/tip.styl","hash":"0247e72526f99d92b2d44c15aa626742873caa3c","modified":1644063063884},{"_id":"themes/shoka/source/css/_common/scaffolding/tables.styl","hash":"64e746ba8498b407cb122ea8f0c0f82108388e12","modified":1644063063884},{"_id":"themes/shoka/source/css/_common/scaffolding/toggles.styl","hash":"06d2c4b90c83e34ada52fb24c23a3619edd8f784","modified":1644063063884},{"_id":"themes/shoka/source/css/_common/outline/outline.styl","hash":"8e1c6ac3fc4f36b710090d9ceecdc91af8af5a67","modified":1644063063876},{"_id":"themes/shoka/example/source/_posts/computer-science/note/cover.jpg","hash":"6d077a7330284d0fb2b79e96d7e5b56121395df3","modified":1644063063821},{"_id":"themes/shoka/source/css/_common/outline/mobile.styl","hash":"3dd4a95737f28d93f18b5c1fdd4ab9675871e89b","modified":1644063063876},{"_id":"themes/shoka/source/css/_common/components/highlight/operation.styl","hash":"a231b09682dedd2c5aae41995d2e7292ffc2cf9b","modified":1644063063861},{"_id":"themes/shoka/source/css/_common/components/post/copyright.styl","hash":"c5f9fd384e5682eea88258a2307b4bc8875cfb5c","modified":1644063063863},{"_id":"themes/shoka/source/css/_common/components/post/breadcrumb.styl","hash":"b7b3ff728fff411639402f9951ce14a88e6a20f6","modified":1644063063863},{"_id":"themes/shoka/source/css/_common/components/post/footer.styl","hash":"634268e1f4e75858a98ebf4253026455a4458d23","modified":1644063063864},{"_id":"themes/shoka/source/css/_common/components/highlight/highlight.styl","hash":"b47eea33d53ad8a4e47c56e0005c92473dff669e","modified":1644063063860},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc.md","hash":"ad6511b92dc58a871ab183d3f4f2c82317112741","modified":1644063063821},{"_id":"themes/shoka/source/css/_common/components/post/header.styl","hash":"0309d9d3a2c7a511faf2b0881932b4bac7144e25","modified":1644063063864},{"_id":"themes/shoka/source/css/_common/components/post/post.styl","hash":"0861df864b8afb32fb8160d25e5c9d63adccbf3c","modified":1644063063865},{"_id":"themes/shoka/source/css/_common/components/post/nav.styl","hash":"95d2cc80341875e25765d029df5b5324f6cc390a","modified":1644063063865},{"_id":"themes/shoka/source/css/_common/components/post/reward.styl","hash":"3a4f5c15bee5da47bc914550439d26c80549df13","modified":1644063063865},{"_id":"themes/shoka/source/css/_common/components/post/rtl.styl","hash":"d909dcbc0e61358a5804161470ac9064049f1a36","modified":1644063063865},{"_id":"themes/shoka/source/css/_common/components/post/tags.styl","hash":"68d4e96d15ca62a89665421ff01f57265e707a7a","modified":1644063063866},{"_id":"themes/shoka/source/css/_common/components/post/expand.styl","hash":"c678e85312309c4f95ac14a2371bf506477dc657","modified":1644063063864},{"_id":"themes/shoka/source/css/_common/components/pages/collapse.styl","hash":"6706bdf8e3124cd786e628602bb8078cfe302a4b","modified":1644063063861},{"_id":"themes/shoka/source/css/_common/components/pages/home.styl","hash":"2a06041021d0e77fe850b46898a18c48d528205e","modified":1644063063862},{"_id":"themes/shoka/source/css/_common/components/tags/collapse.styl","hash":"aae4f6d940ce0c52595bda79c4f7b5231ec9e35f","modified":1644063063866},{"_id":"themes/shoka/source/css/_common/components/pages/tag-cloud.styl","hash":"a890a98b78270e32990604dcd34e8f5cd5aca036","modified":1644063063863},{"_id":"themes/shoka/source/css/_common/components/pages/pages.styl","hash":"18732826b68efdf1e4fa85a3f92b101bfaff0b1f","modified":1644063063862},{"_id":"themes/shoka/source/css/_common/components/tags/label.styl","hash":"f7976cbdc69b577264f1737f1d2bd8996ed72a46","modified":1644063063867},{"_id":"themes/shoka/source/css/_common/components/tags/container.styl","hash":"6b157b774e634c0c031bab392031df0996f0a62c","modified":1644063063866},{"_id":"themes/shoka/source/css/_common/components/tags/links.styl","hash":"d90e56e9b21b15af5b78f824b033e52b13383fec","modified":1644063063867},{"_id":"themes/shoka/source/css/_common/components/tags/note.styl","hash":"f358448cfe80b9641492dacc1e5c9027f6a6165f","modified":1644063063868},{"_id":"themes/shoka/source/css/_common/components/tags/list.styl","hash":"47e91f89615c1a9744358140314739b4074c315b","modified":1644063063867},{"_id":"themes/shoka/source/css/_common/components/tags/player.styl","hash":"8327815a17b617fe1e6dc67cbd713f4c559f57ea","modified":1644063063868},{"_id":"themes/shoka/source/css/_common/components/tags/tabs.styl","hash":"fd1d793c9532c14a44312743b66c163440c533f9","modified":1644063063869},{"_id":"themes/shoka/source/css/_common/components/tags/tags.styl","hash":"b397ce0eb2bec9dcc2e6f7f770ea351eba0b3403","modified":1644063063869},{"_id":"themes/shoka/source/css/_common/components/tags/quiz.styl","hash":"9a278ff96538168a288066f979d98e751d0868f0","modified":1644063063868},{"_id":"themes/shoka/source/css/_common/components/third-party/loading.styl","hash":"551c60b7597160aaebe9f7b0c2efc5b1f5aad124","modified":1644063063869},{"_id":"themes/shoka/source/css/_common/components/third-party/pace.styl","hash":"15371614ff30edb87768bce771aecc6fc99f17a4","modified":1644063063872},{"_id":"themes/shoka/source/css/_common/components/third-party/search.styl","hash":"dbc0a97e86e94c771112bbdb0ce8f20fb714dca8","modified":1644063063872},{"_id":"themes/shoka/source/css/_common/components/third-party/third-party.styl","hash":"b496991b13c1c48972addf19f0a5ba9ab6887f8a","modified":1644063063873},{"_id":"themes/shoka/source/css/_common/components/third-party/theme.styl","hash":"ce162fa39cad04e41de2bd1aa491fd442f678cf6","modified":1644063063872},{"_id":"themes/shoka/source/css/_common/components/third-party/widgets.styl","hash":"cdbd2b2d8d76216de2753c44eee3f134a81332c0","modified":1644063063873},{"_id":"themes/shoka/source/css/_common/outline/footer/footer.styl","hash":"f3a1ebc96370ba9eab412ff646f2720981befff0","modified":1644063063874},{"_id":"themes/shoka/source/css/_common/outline/header/brand.styl","hash":"907482ef812c0c6bfe0aa97bda5b615e5d866364","modified":1644063063874},{"_id":"themes/shoka/source/css/_common/outline/header/header.styl","hash":"9d953fbcb959ebace0a2ab9f7cf022261c0adaa5","modified":1644063063874},{"_id":"themes/shoka/source/css/_common/outline/header/image.styl","hash":"dbb15a0f85fba918f8e4842be4f88278685d9e5a","modified":1644063063874},{"_id":"themes/shoka/source/css/_common/outline/header/menu.styl","hash":"b7afe5c76314d61fc69b62dbeb4717058484b0d9","modified":1644063063874},{"_id":"themes/shoka/source/css/_common/outline/header/nav.styl","hash":"0a135615fa1f8161c5bdbfb46351b85bb565e2f3","modified":1644063063875},{"_id":"themes/shoka/source/css/_common/components/third-party/valine.styl","hash":"9263dd35f48a0ee2c5a30e68ded287c7a7c9761d","modified":1644063063873},{"_id":"themes/shoka/source/css/_common/outline/header/right.styl","hash":"eace1eeb80bb6af6a87735d5adf0b1a9c4cc8ada","modified":1644063063875},{"_id":"themes/shoka/source/css/_common/outline/header/tool.styl","hash":"4c90c6c5daee084b8741c106012618fe9f7dbd23","modified":1644063063875},{"_id":"themes/shoka/source/css/_common/outline/header/waves.styl","hash":"d3e90e31be3f2fad345acaaa4822dd9995ad17a3","modified":1644063063876},{"_id":"themes/shoka/source/css/_common/outline/sidebar/author.styl","hash":"0d16286549a33c762664e89aecb18eaa4eb330b0","modified":1644063063877},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/week-1.md","hash":"6bd9d2d2776d899bb2e66ef4a69ad50f1de1e0ce","modified":1644063063820},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/cover.jpg","hash":"57341ddf90eeb71d0b9a3fef8cf1f094f9c299b3","modified":1644063063820},{"_id":"themes/shoka/example/source/_posts/computer-science/java/course-1/week-2.md","hash":"acec1f17433bf7b50af88bb02835381924b0ac7b","modified":1644063063820},{"_id":"themes/shoka/source/css/_common/outline/sidebar/dimmer.styl","hash":"373baf0c5e50363e7c60c53ccfed32ef565c38c7","modified":1644063063877},{"_id":"themes/shoka/source/css/_common/outline/sidebar/quick.styl","hash":"3da1dc88d42050e44f4e76daa41d2a5befeffa22","modified":1644063063879},{"_id":"themes/shoka/source/css/_common/outline/sidebar/sidebar.styl","hash":"740535dece990c2e4ae56e2e5aac7cea8c099b18","modified":1644063063879},{"_id":"themes/shoka/source/css/_common/outline/sidebar/related.styl","hash":"71496a1be370db66843e2661e5594a6a1898c3c6","modified":1644063063879},{"_id":"themes/shoka/source/css/_common/outline/sidebar/menu.styl","hash":"52f318a35ffe38657fbe23e5ef3f7433bf11dadc","modified":1644063063878},{"_id":"themes/shoka/source/css/_common/outline/sidebar/social.styl","hash":"4854aec659aac752b60836eef4aeae0e1312ff82","modified":1644063063879},{"_id":"themes/shoka/source/css/_common/outline/sidebar/state.styl","hash":"e54b26894d3c63032b9be7d7e0f63feb3bd3a20a","modified":1644063063880},{"_id":"themes/shoka/source/css/_common/outline/sidebar/tab.styl","hash":"5aff5ddcc8d0bf4df33de7a4919e0aa040a40ca2","modified":1644063063880},{"_id":"themes/shoka/source/css/_common/outline/sidebar/toc.styl","hash":"e431443ddfc83aa39dd28e3ce645529694a3e266","modified":1644063063880},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/dependents.md","hash":"3fc238f649d14b31d6b8d9c8dfa650cf2b939970","modified":1644063063822},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/gantt.styl","hash":"61c66a462b78a836226a2d8debb945aa5b3b3429","modified":1644063063870},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/config.md","hash":"1e23aeabba28109b702e1f584d4b81b68dcf322f","modified":1644063063822},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/flowchart.styl","hash":"85f5d3f3da9d86fcf9999f3af1e1b837d55206af","modified":1644063063870},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/mermaid.styl","hash":"4dc498f13fb656711d5e2acc9b6d48cbdd747609","modified":1644063063871},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/display.md","hash":"185ff5a5262346ed2bb1a5430f959bfc6b1d0341","modified":1644063063823},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/git.styl","hash":"19b6b3c75dac1426d75c81fa1bf0da7482fcde96","modified":1644063063871},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/sequence.styl","hash":"8630ac2eb00713109d885143b9d0776d1e8a6e1c","modified":1644063063871},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/state.styl","hash":"5c03ccd22355e159169c341616b2e157516825a3","modified":1644063063872},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/pie.styl","hash":"8da616dcd22b4f2619d817b0cf4986d0aa66954d","modified":1644063063871},{"_id":"themes/shoka/example/source/_posts/computer-science/note/theme-shoka-doc/special.md","hash":"67ed36fae1ea3029cc9fdbda0a16ee7053943cf1","modified":1644063063823},{"_id":"themes/shoka/source/css/_common/components/third-party/mermaid/class.styl","hash":"e942b2308a788865b451fbc2cf1718dcdf93299e","modified":1644063063870},{"_id":"themes/shoka/example/source/assets/wallpaper-2572384.jpg","hash":"1df3620ab8c69fe2498a746f8ead057162df0637","modified":1644063063832},{"_id":"themes/shoka/screenshot.png","hash":"676ab8bfe3fa106e5b88617ab377cd6b438cc0d9","modified":1644063063852},{"_id":"themes/shoka/example/source/assets/wallpaper-878514.jpg","hash":"9f9705a377c42320b335b3c66b023e62b80e56e3","modified":1644063063837},{"_id":"themes/shoka/example/source/assets/wallpaper-2311325.jpg","hash":"ddaaaeb4fa04a05c83053c1f8149720d18c9c8de","modified":1644063063831},{"_id":"themes/shoka/source/images/avatar.jpg","hash":"5fb1f6c96fc7148e9ca7f8b057fa760ad3bae5c8","modified":1698386257889},{"_id":"public/2022/04/15/my-first-post/index.html","hash":"45f543ea1ace6433c90e67415d4b6259a9cd3981","modified":1698395253523},{"_id":"public/archives/index.html","hash":"4b4001760324c97865c4942707dfc4dad9568995","modified":1698398149733},{"_id":"public/archives/2022/index.html","hash":"ff9b8f90dfeca58cf2ff06a2917704f32040406e","modified":1698398149733},{"_id":"public/archives/2022/04/index.html","hash":"4467f41563fba82b17a10a9f44dab0941a947dc1","modified":1698398149733},{"_id":"public/index.html","hash":"1ae36acf3013e32e1edde4003ed144a013035bc5","modified":1698398149733},{"_id":"public/tags/【交互式系统】/index.html","hash":"deca04e4a16cc188289f5342d44d343e9da838bc","modified":1698395253523},{"_id":"public/tags/index.html","hash":"3c153daa944f479a2849517779d48f5433e6edab","modified":1698398149733},{"_id":"public/categories/index.html","hash":"1f85c9e6006781800faca0dda8a7318488416597","modified":1698398149733},{"_id":"public/404.html","hash":"f1ca751a7c80df8cfa28057db455fb442b8da783","modified":1698398149733},{"_id":"public/js/app.js","hash":"1e57712e7b17cee0e0f8b81bd5e1017a0cc21e3a","modified":1698384920466},{"_id":"public/images/404.png","hash":"b7b18f6689d0a14041d87bab6c4e4ce567249d01","modified":1698384920466},{"_id":"public/images/alipay.png","hash":"013436bac325a3a0c2c9b13a08312fc4e7025d69","modified":1698384920466},{"_id":"public/images/apple-touch-icon.png","hash":"d4e5d65ff663cb71f43515e68d757cbae1ceb3ec","modified":1698384920466},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1698384920466},{"_id":"public/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1698384920466},{"_id":"public/images/favicon.ico","hash":"8ae48d9e33b7593cd005aae88b755aa9ce129f0e","modified":1698384920466},{"_id":"public/images/paypal.png","hash":"872d4b6d3cacee4845246fbf29817f1ee98bb037","modified":1698384920466},{"_id":"public/images/logo.svg","hash":"48014a7148fde766848eb4701c8df421a17cb74b","modified":1698384920466},{"_id":"public/images/play_disc.png","hash":"3cfa8dd2e12424c52d1f5e34e9502e446fecde9c","modified":1698384920466},{"_id":"public/images/play_needle.png","hash":"e0998828ab50ce37617f9f4d46b74648206ac852","modified":1698384920466},{"_id":"public/images/search.png","hash":"08c4f6a7a92eff3548aec94b267a23a25e6bd215","modified":1698384920466},{"_id":"public/images/wechatpay.png","hash":"470a42ee16dd516580d5e51607f11dc353a49675","modified":1698384920466},{"_id":"public/css/comment.css","hash":"02095bbceb2776977774348a2f347a7995b19327","modified":1698384920466},{"_id":"public/css/mermaid.css","hash":"3fe1b97a64b969d4d7a470a4929cb432afefd1bd","modified":1698384920466},{"_id":"public/css/app.css","hash":"3dca5bc9caacfa3e0633733b2d0a330c15d57466","modified":1698384920466},{"_id":"public/images/avatar.jpg","hash":"5fb1f6c96fc7148e9ca7f8b057fa760ad3bae5c8","modified":1698386264850},{"_id":"source/_posts/Maze_Solver.md","hash":"dfd4388347f4b24b8d3faa05528a14d9bb4e048d","modified":1698392227080},{"_id":"public/2023/10/27/Maze_Solver/index.html","hash":"31e828c4c685f77eeee3501bee75eadedaf9020b","modified":1698398149733},{"_id":"public/archives/2023/index.html","hash":"bb9beb24a89fed1ada117097fe7ad2d15715374a","modified":1698398149733},{"_id":"public/archives/2023/10/index.html","hash":"94e585156238ccd58314159254238e2502c2926a","modified":1698398149733},{"_id":"public/tags/【GAME】/index.html","hash":"623bb8e82baaa7fafc9d47ebae956f45dbd745a6","modified":1698398149733},{"_id":"source/_posts/Chess_video_game.md","hash":"580371912dca48707a990e2fab3130a3125b05d8","modified":1698392730820},{"_id":"public/2023/10/27/Chess_video_game/index.html","hash":"f6f0268fa4eb5f9c683048cc033e28a3698c4946","modified":1698398149733},{"_id":"source/_posts/Snake_Game.md","hash":"fbecfeaddc95098f0ea990f6e4ebfdf1f8871497","modified":1698394733279},{"_id":"public/2023/10/27/Snake_Game/index.html","hash":"bf4c0decf9a2d1e829efdfd47c369f0bdc50b707","modified":1698398149733},{"_id":"source/_posts/A_Fuzzy_Logic-based_Washing_Machine.md","hash":"4a53c93fc61fdbcdf12955e1f4e33638c362db31","modified":1698395232593},{"_id":"public/2023/10/27/A_Fuzzy_Logic-based_Washing_Machine/index.html","hash":"fa5f7254b46a687b7b2390a3b12df00a9791e754","modified":1698398149733},{"_id":"public/tags/【System】/index.html","hash":"5351134c774962f8e0503765c2fdb4b28d15e201","modified":1698398149733},{"_id":"source/_posts/Interactive_Systems.md","hash":"2900ac09d06d0e0591d0c6f8909c738b5913b909","modified":1698395691178},{"_id":"public/2022/04/15/Interactive_Systems/index.html","hash":"c7e99bb89afae878594c10dfb4efcaf0e6ccf1db","modified":1698398149733},{"_id":"source/_posts/Search_engine_in_a_room.md","hash":"d8213fe2c1006491b7e061d2dfd764ede42613b8","modified":1698397527838},{"_id":"public/archives/2022/05/index.html","hash":"12fc01a19c8b820484375a19b1ce1f799abcc7fe","modified":1698398149733},{"_id":"public/2022/05/19/Search_engine_in_a_room/index.html","hash":"e0f473481c3af6275de536e4cc7f1396c1303ec5","modified":1698398149733},{"_id":"source/_posts/Vehicle_Poses.md","hash":"bb8fd3ffd928ae3bd6571eb562a63c11ace18efc","modified":1698398144894},{"_id":"public/2022/05/30/Vehicle_Poses/index.html","hash":"eee91b454f479c896ddd4b82ae38d10051c89b9c","modified":1698398149733}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Maze Solver","cover":"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/maze.png","_content":"# Maze Solver\n---\n## Performance\nThe MazeApplication is a JavaFX application that allows users to specify a text file containing a maze representation. The graphical representation of the maze is displayed to the user. The user will also be able to: (i) step through the solving process with the visualisation updating to the current state, (ii) save the current route-solving state to a file, and (iii) load route-solving state from a file. For example, a simple implementation of this might look as follows:\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/maze_interface.png)","source":"_posts/Maze_Solver.md","raw":"---\ntitle: Maze Solver\ntags: 【GAME】\ncover: https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/maze.png\n---\n# Maze Solver\n---\n## Performance\nThe MazeApplication is a JavaFX application that allows users to specify a text file containing a maze representation. The graphical representation of the maze is displayed to the user. The user will also be able to: (i) step through the solving process with the visualisation updating to the current state, (ii) save the current route-solving state to a file, and (iii) load route-solving state from a file. For example, a simple implementation of this might look as follows:\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/maze_interface.png)","slug":"Maze_Solver","published":1,"date":"2023-10-27T07:30:56.894Z","updated":"2023-10-27T07:37:07.080Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8avyz2000018jg1tebcznt","content":"<h1 id=\"maze-solver\"><a class=\"markdownIt-Anchor\" href=\"#maze-solver\">#</a> Maze Solver</h1>\n<hr>\n<h2 id=\"performance\"><a class=\"markdownIt-Anchor\" href=\"#performance\">#</a> Performance</h2>\n<p>The MazeApplication is a JavaFX application that allows users to specify a text file containing a maze representation. The graphical representation of the maze is displayed to the user. The user will also be able to: (i) step through the solving process with the visualisation updating to the current state, (ii) save the current route-solving state to a file, and (iii) load route-solving state from a file. For example, a simple implementation of this might look as follows:<br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/maze_interface.png\" alt=\"\"></p>\n","site":{"data":{}},"length":422,"excerpt":"","more":"<h1 id=\"maze-solver\"><a class=\"markdownIt-Anchor\" href=\"#maze-solver\">#</a> Maze Solver</h1>\n<hr>\n<h2 id=\"performance\"><a class=\"markdownIt-Anchor\" href=\"#performance\">#</a> Performance</h2>\n<p>The MazeApplication is a JavaFX application that allows users to specify a text file containing a maze representation. The graphical representation of the maze is displayed to the user. The user will also be able to: (i) step through the solving process with the visualisation updating to the current state, (ii) save the current route-solving state to a file, and (iii) load route-solving state from a file. For example, a simple implementation of this might look as follows:<br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/maze_interface.png\" alt=\"\"></p>\n"},{"title":"Chess Video Game","cover":"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/Chess.png","_content":"# Chess Video Game\n---\n## Rules of the game to be implemented\nThis chess game, will implement a subset of the rules of chess including:\n1.The initial setup as defined in the Rules of Chess wikipedia page.\n2.All the basic moves.\n3.The game ends when a king is captured or one player resigns.\n4.Note that the notation for the coordinates is different in our game. The original game is a to h on the X axis (left to right) and 8 to 1 on the Y axis (top to bottom), while in our case the latter should be 1 to 8 from the top to the bottom. \n\nFor example, a simple implementation of this might look as follows:\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/ches_interface.png)","source":"_posts/Chess_video_game.md","raw":"---\ntitle: Chess Video Game\ntags: 【GAME】\ncover: https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/Chess.png\n---\n# Chess Video Game\n---\n## Rules of the game to be implemented\nThis chess game, will implement a subset of the rules of chess including:\n1.The initial setup as defined in the Rules of Chess wikipedia page.\n2.All the basic moves.\n3.The game ends when a king is captured or one player resigns.\n4.Note that the notation for the coordinates is different in our game. The original game is a to h on the X axis (left to right) and 8 to 1 on the Y axis (top to bottom), while in our case the latter should be 1 to 8 from the top to the bottom. \n\nFor example, a simple implementation of this might look as follows:\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/ches_interface.png)","slug":"Chess_video_game","published":1,"date":"2023-10-27T07:38:44.141Z","updated":"2023-10-27T07:45:30.820Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8b6q5800006mjgfjm6gcp9","content":"<h1 id=\"chess-video-game\"><a class=\"markdownIt-Anchor\" href=\"#chess-video-game\">#</a> Chess Video Game</h1>\n<hr>\n<h2 id=\"rules-of-the-game-to-be-implemented\"><a class=\"markdownIt-Anchor\" href=\"#rules-of-the-game-to-be-implemented\">#</a> Rules of the game to be implemented</h2>\n<p>This chess game, will implement a subset of the rules of chess including:<br>\n1.The initial setup as defined in the Rules of Chess wikipedia page.<br>\n2.All the basic moves.<br>\n3.The game ends when a king is captured or one player resigns.<br>\n4.Note that the notation for the coordinates is different in our game. The original game is a to h on the X axis (left to right) and 8 to 1 on the Y axis (top to bottom), while in our case the latter should be 1 to 8 from the top to the bottom.</p>\n<p>For example, a simple implementation of this might look as follows:<br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/ches_interface.png\" alt=\"\"></p>\n","site":{"data":{}},"length":481,"excerpt":"","more":"<h1 id=\"chess-video-game\"><a class=\"markdownIt-Anchor\" href=\"#chess-video-game\">#</a> Chess Video Game</h1>\n<hr>\n<h2 id=\"rules-of-the-game-to-be-implemented\"><a class=\"markdownIt-Anchor\" href=\"#rules-of-the-game-to-be-implemented\">#</a> Rules of the game to be implemented</h2>\n<p>This chess game, will implement a subset of the rules of chess including:<br>\n1.The initial setup as defined in the Rules of Chess wikipedia page.<br>\n2.All the basic moves.<br>\n3.The game ends when a king is captured or one player resigns.<br>\n4.Note that the notation for the coordinates is different in our game. The original game is a to h on the X axis (left to right) and 8 to 1 on the Y axis (top to bottom), while in our case the latter should be 1 to 8 from the top to the bottom.</p>\n<p>For example, a simple implementation of this might look as follows:<br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/ches_interface.png\" alt=\"\"></p>\n"},{"title":"Snake Game","cover":"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/snake.jpeg","_content":"# Snake Game\n---\n## Rules of the game to be implemented\nThe Snake game is a classic and simple video game in which the player controls a snake that moves around a confined playing area, trying to collect food items while avoiding collisions with the walls of the playing area and the snake's own tail. Here's a basic explanation of how the game works:\n\n1.Objective: The primary objective of the game is to eat as much food as possible to make the snake grow longer. The game continues until the snake collides with the wall or itself.\n\n2.Game Elements:\n\n  Snake: The player controls a snake, typically represented as a line or a chain of connected segments. The snake starts as a short line and gradually grows longer as it consumes food.\n  Food: Food items appear at random positions within the playing area. When the snake \"eats\" a food item, it gets longer, and a new food item appears elsewhere in the arena.\n\n3.Controls: The player can control the snake's direction using arrow keys (or other input methods). The snake can move up, down, left, and right.\n\n4.Gameplay: As the game begins, the snake starts moving in a specific direction. The player's task is to change the snake's direction to guide it toward the food items. When the snake eats food, it grows longer, making it more challenging to avoid collisions.\n\n5.Game Over: The game ends when one of the following conditions is met:\n\n  The snake collides with the walls of the playing area.\n  The snake collides with itself (by running into its own body).\n\n6.Scoring: The player's score is usually based on the number of food items the snake eats. The longer the snake gets, the higher the score.\n![]\n","source":"_posts/Snake_Game.md","raw":"---\ntitle: Snake Game\ntags: 【GAME】\ncover: https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/snake.jpeg\n---\n# Snake Game\n---\n## Rules of the game to be implemented\nThe Snake game is a classic and simple video game in which the player controls a snake that moves around a confined playing area, trying to collect food items while avoiding collisions with the walls of the playing area and the snake's own tail. Here's a basic explanation of how the game works:\n\n1.Objective: The primary objective of the game is to eat as much food as possible to make the snake grow longer. The game continues until the snake collides with the wall or itself.\n\n2.Game Elements:\n\n  Snake: The player controls a snake, typically represented as a line or a chain of connected segments. The snake starts as a short line and gradually grows longer as it consumes food.\n  Food: Food items appear at random positions within the playing area. When the snake \"eats\" a food item, it gets longer, and a new food item appears elsewhere in the arena.\n\n3.Controls: The player can control the snake's direction using arrow keys (or other input methods). The snake can move up, down, left, and right.\n\n4.Gameplay: As the game begins, the snake starts moving in a specific direction. The player's task is to change the snake's direction to guide it toward the food items. When the snake eats food, it grows longer, making it more challenging to avoid collisions.\n\n5.Game Over: The game ends when one of the following conditions is met:\n\n  The snake collides with the walls of the playing area.\n  The snake collides with itself (by running into its own body).\n\n6.Scoring: The player's score is usually based on the number of food items the snake eats. The longer the snake gets, the higher the score.\n![]\n","slug":"Snake_Game","published":1,"date":"2023-10-27T08:00:24.329Z","updated":"2023-10-27T08:18:53.279Z","_id":"clo8bw5it0000hcjg2t5x25l8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"snake-game\"><a class=\"markdownIt-Anchor\" href=\"#snake-game\">#</a> Snake Game</h1>\n<hr>\n<h2 id=\"rules-of-the-game-to-be-implemented\"><a class=\"markdownIt-Anchor\" href=\"#rules-of-the-game-to-be-implemented\">#</a> Rules of the game to be implemented</h2>\n<p>The Snake game is a classic and simple video game in which the player controls a snake that moves around a confined playing area, trying to collect food items while avoiding collisions with the walls of the playing area and the snake’s own tail. Here’s a basic explanation of how the game works:</p>\n<p>1.Objective: The primary objective of the game is to eat as much food as possible to make the snake grow longer. The game continues until the snake collides with the wall or itself.</p>\n<p>2.Game Elements:</p>\n<p>Snake: The player controls a snake, typically represented as a line or a chain of connected segments. The snake starts as a short line and gradually grows longer as it consumes food.<br>\nFood: Food items appear at random positions within the playing area. When the snake “eats” a food item, it gets longer, and a new food item appears elsewhere in the arena.</p>\n<p>3.Controls: The player can control the snake’s direction using arrow keys (or other input methods). The snake can move up, down, left, and right.</p>\n<p>4.Gameplay: As the game begins, the snake starts moving in a specific direction. The player’s task is to change the snake’s direction to guide it toward the food items. When the snake eats food, it grows longer, making it more challenging to avoid collisions.</p>\n<p>5.Game Over: The game ends when one of the following conditions is met:</p>\n<p>The snake collides with the walls of the playing area.<br>\nThe snake collides with itself (by running into its own body).</p>\n<p>6.Scoring: The player’s score is usually based on the number of food items the snake eats. The longer the snake gets, the higher the score.<br>\n![]</p>\n","site":{"data":{}},"length":1351,"excerpt":"","more":"<h1 id=\"snake-game\"><a class=\"markdownIt-Anchor\" href=\"#snake-game\">#</a> Snake Game</h1>\n<hr>\n<h2 id=\"rules-of-the-game-to-be-implemented\"><a class=\"markdownIt-Anchor\" href=\"#rules-of-the-game-to-be-implemented\">#</a> Rules of the game to be implemented</h2>\n<p>The Snake game is a classic and simple video game in which the player controls a snake that moves around a confined playing area, trying to collect food items while avoiding collisions with the walls of the playing area and the snake’s own tail. Here’s a basic explanation of how the game works:</p>\n<p>1.Objective: The primary objective of the game is to eat as much food as possible to make the snake grow longer. The game continues until the snake collides with the wall or itself.</p>\n<p>2.Game Elements:</p>\n<p>Snake: The player controls a snake, typically represented as a line or a chain of connected segments. The snake starts as a short line and gradually grows longer as it consumes food.<br>\nFood: Food items appear at random positions within the playing area. When the snake “eats” a food item, it gets longer, and a new food item appears elsewhere in the arena.</p>\n<p>3.Controls: The player can control the snake’s direction using arrow keys (or other input methods). The snake can move up, down, left, and right.</p>\n<p>4.Gameplay: As the game begins, the snake starts moving in a specific direction. The player’s task is to change the snake’s direction to guide it toward the food items. When the snake eats food, it grows longer, making it more challenging to avoid collisions.</p>\n<p>5.Game Over: The game ends when one of the following conditions is met:</p>\n<p>The snake collides with the walls of the playing area.<br>\nThe snake collides with itself (by running into its own body).</p>\n<p>6.Scoring: The player’s score is usually based on the number of food items the snake eats. The longer the snake gets, the higher the score.<br>\n![]</p>\n"},{"title":"A Fuzzy Logic-based Washing Machine","cover":"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash.jpeg","_content":"# A Fuzzy Logic-based Washing Machine\n---\n## Fuzzy Logic\n\nA Fuzzy Logic-based washing machine is equipped with an artificial intelligence (AI) system that uses Fuzzy Logic to optimize the washing process. Fuzzy Logic is a mathematical approach that allows the machine to make decisions based on \"fuzzy\" or imprecise data, making it well-suited for washing machines.\n\nFor example, a simple implementation of this might look as follows:\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash1.png)\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash2.png)","source":"_posts/A_Fuzzy_Logic-based_Washing_Machine.md","raw":"---\ntitle: A Fuzzy Logic-based Washing Machine\ntags: 【System】\ncover: https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash.jpeg\n---\n# A Fuzzy Logic-based Washing Machine\n---\n## Fuzzy Logic\n\nA Fuzzy Logic-based washing machine is equipped with an artificial intelligence (AI) system that uses Fuzzy Logic to optimize the washing process. Fuzzy Logic is a mathematical approach that allows the machine to make decisions based on \"fuzzy\" or imprecise data, making it well-suited for washing machines.\n\nFor example, a simple implementation of this might look as follows:\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash1.png)\n![](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash2.png)","slug":"A_Fuzzy_Logic-based_Washing_Machine","published":1,"date":"2023-10-27T08:18:07.856Z","updated":"2023-10-27T08:27:12.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8cole10000y1jghtyr22zz","content":"<h1 id=\"a-fuzzy-logic-based-washing-machine\"><a class=\"markdownIt-Anchor\" href=\"#a-fuzzy-logic-based-washing-machine\">#</a> A Fuzzy Logic-based Washing Machine</h1>\n<hr>\n<h2 id=\"fuzzy-logic\"><a class=\"markdownIt-Anchor\" href=\"#fuzzy-logic\">#</a> Fuzzy Logic</h2>\n<p>A Fuzzy Logic-based washing machine is equipped with an artificial intelligence (AI) system that uses Fuzzy Logic to optimize the washing process. Fuzzy Logic is a mathematical approach that allows the machine to make decisions based on “fuzzy” or imprecise data, making it well-suited for washing machines.</p>\n<p>For example, a simple implementation of this might look as follows:<br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash1.png\" alt=\"\"><br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash2.png\" alt=\"\"></p>\n","site":{"data":{}},"length":361,"excerpt":"","more":"<h1 id=\"a-fuzzy-logic-based-washing-machine\"><a class=\"markdownIt-Anchor\" href=\"#a-fuzzy-logic-based-washing-machine\">#</a> A Fuzzy Logic-based Washing Machine</h1>\n<hr>\n<h2 id=\"fuzzy-logic\"><a class=\"markdownIt-Anchor\" href=\"#fuzzy-logic\">#</a> Fuzzy Logic</h2>\n<p>A Fuzzy Logic-based washing machine is equipped with an artificial intelligence (AI) system that uses Fuzzy Logic to optimize the washing process. Fuzzy Logic is a mathematical approach that allows the machine to make decisions based on “fuzzy” or imprecise data, making it well-suited for washing machines.</p>\n<p>For example, a simple implementation of this might look as follows:<br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash1.png\" alt=\"\"><br>\n<img data-src=\"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/wash2.png\" alt=\"\"></p>\n"},{"title":"Interactive Systems","date":"2022-04-15T11:52:27.000Z","cover":"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/interactive.jpeg","_content":" - - - - - - - - - - - - - - - - - - - - - -\n# Interactive Systems\n---\n## \"What is an interactive system?\"\nA distributed system is a system whose components are located on different networked computers that communicate and coordinate their actions by passing information from any system to each other. The components interact with each other to achieve a common goal.\nDistributed systems allow for the sharing of resources, including software shared by systems connected to the network. Examples of distributed systems/applications of distributed computing: intranet, internet, WWW, e-mail. Telecommunication networks. Telephone networks and cellular networks.\n\n## \"Make a simple distributed system.\"\n- **Program Design**:\n1. only one pair of people can use this chat system\n2. the first person to open the system is client1st and the second person to open the system is clent2nd.\n3. each person can only type one message at a time, and then they must wait for the other person to reply.\n4. while one person is typing, the other person must wait.\n5. type end to end the program.\n- **Cautions for using this program**:\n1. the same string cannot be entered consecutively by one person or it will be considered as no input. It is regarded as no input.\n2. line breaks cannot be entered\n3. both people must type 'end' to end the chat.\n- **Structural Framework**:\n1. the length of the key in the server is used to determine if it is the first member because if the length is 1, the server is empty, then no one has opened the chat and typed in a message before, then the member is client1st.\n2. it is then necessary to determine if the user wants to chat, i.e. to determine if \"end\" has been entered.\n3. the first input needs to be presented in a separate category with a welcome message in it to remind the user if it is client1st or client2nd. so there are two ways to determine if it is the first input and read it, the first is to directly determine message1 and message2 the second is to determine if the keys in the server are the same as the message (note that the key value taken from the server (Note that the string taken from the server will have an extra '\\n' after decoding, so it can't be judged directly, and '\\n' should be added to judge it.\n4. After that, we need to clarify the representation and judgment of two states, one is input and the other is waiting.\n    In the waiting state , because the other member does not have any input, at this time the server corresponds to the value of the other party's message and the value of the message itself, so it can be used to determine whether it is in the waiting state.\n    In the wait state, all we need to do is wait, so I set up a sleep three-second refresh to wait for input from the other member.\n    In the input state, we need to refresh the value of the message and then update the corresponding value on the server based on the new input.\n5. when ending the chat by typing 'end', the server needs to be cleared for the next time.\n! [](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/comp.jpeg)","source":"_posts/Interactive_Systems.md","raw":"---\ntitle: Interactive Systems\ndate: 2022-04-15 12:52:27\ntags: 【System】\ncover: https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/interactive.jpeg\n--- - - - - - - - - - - - - - - - - - - - - - -\n# Interactive Systems\n---\n## \"What is an interactive system?\"\nA distributed system is a system whose components are located on different networked computers that communicate and coordinate their actions by passing information from any system to each other. The components interact with each other to achieve a common goal.\nDistributed systems allow for the sharing of resources, including software shared by systems connected to the network. Examples of distributed systems/applications of distributed computing: intranet, internet, WWW, e-mail. Telecommunication networks. Telephone networks and cellular networks.\n\n## \"Make a simple distributed system.\"\n- **Program Design**:\n1. only one pair of people can use this chat system\n2. the first person to open the system is client1st and the second person to open the system is clent2nd.\n3. each person can only type one message at a time, and then they must wait for the other person to reply.\n4. while one person is typing, the other person must wait.\n5. type end to end the program.\n- **Cautions for using this program**:\n1. the same string cannot be entered consecutively by one person or it will be considered as no input. It is regarded as no input.\n2. line breaks cannot be entered\n3. both people must type 'end' to end the chat.\n- **Structural Framework**:\n1. the length of the key in the server is used to determine if it is the first member because if the length is 1, the server is empty, then no one has opened the chat and typed in a message before, then the member is client1st.\n2. it is then necessary to determine if the user wants to chat, i.e. to determine if \"end\" has been entered.\n3. the first input needs to be presented in a separate category with a welcome message in it to remind the user if it is client1st or client2nd. so there are two ways to determine if it is the first input and read it, the first is to directly determine message1 and message2 the second is to determine if the keys in the server are the same as the message (note that the key value taken from the server (Note that the string taken from the server will have an extra '\\n' after decoding, so it can't be judged directly, and '\\n' should be added to judge it.\n4. After that, we need to clarify the representation and judgment of two states, one is input and the other is waiting.\n    In the waiting state , because the other member does not have any input, at this time the server corresponds to the value of the other party's message and the value of the message itself, so it can be used to determine whether it is in the waiting state.\n    In the wait state, all we need to do is wait, so I set up a sleep three-second refresh to wait for input from the other member.\n    In the input state, we need to refresh the value of the message and then update the corresponding value on the server based on the new input.\n5. when ending the chat by typing 'end', the server needs to be cleared for the next time.\n! [](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/comp.jpeg)","slug":"Interactive_Systems","published":1,"updated":"2023-10-27T08:34:51.178Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8cy2ga000032jg5lue089c","content":"<hr>\n<h1 id=\"interactive-systems\"><a class=\"markdownIt-Anchor\" href=\"#interactive-systems\">#</a> Interactive Systems</h1>\n<hr>\n<h2 id=\"what-is-an-interactive-system\"><a class=\"markdownIt-Anchor\" href=\"#what-is-an-interactive-system\">#</a> “What is an interactive system?”</h2>\n<p>A distributed system is a system whose components are located on different networked computers that communicate and coordinate their actions by passing information from any system to each other. The components interact with each other to achieve a common goal.<br>\nDistributed systems allow for the sharing of resources, including software shared by systems connected to the network. Examples of distributed systems/applications of distributed computing: intranet, internet, WWW, e-mail. Telecommunication networks. Telephone networks and cellular networks.</p>\n<h2 id=\"make-a-simple-distributed-system\"><a class=\"markdownIt-Anchor\" href=\"#make-a-simple-distributed-system\">#</a> “Make a simple distributed system.”</h2>\n<ul>\n<li><strong>Program Design</strong>:</li>\n</ul>\n<ol>\n<li>only one pair of people can use this chat system</li>\n<li>the first person to open the system is client1st and the second person to open the system is clent2nd.</li>\n<li>each person can only type one message at a time, and then they must wait for the other person to reply.</li>\n<li>while one person is typing, the other person must wait.</li>\n<li>type end to end the program.</li>\n</ol>\n<ul>\n<li><strong>Cautions for using this program</strong>:</li>\n</ul>\n<ol>\n<li>the same string cannot be entered consecutively by one person or it will be considered as no input. It is regarded as no input.</li>\n<li>line breaks cannot be entered</li>\n<li>both people must type ‘end’ to end the chat.</li>\n</ol>\n<ul>\n<li><strong>Structural Framework</strong>:</li>\n</ul>\n<ol>\n<li>the length of the key in the server is used to determine if it is the first member because if the length is 1, the server is empty, then no one has opened the chat and typed in a message before, then the member is client1st.</li>\n<li>it is then necessary to determine if the user wants to chat, i.e. to determine if “end” has been entered.</li>\n<li>the first input needs to be presented in a separate category with a welcome message in it to remind the user if it is client1st or client2nd. so there are two ways to determine if it is the first input and read it, the first is to directly determine message1 and message2 the second is to determine if the keys in the server are the same as the message (note that the key value taken from the server (Note that the string taken from the server will have an extra ‘\\n’ after decoding, so it can’t be judged directly, and ‘\\n’ should be added to judge it.</li>\n<li>After that, we need to clarify the representation and judgment of two states, one is input and the other is waiting.<br>\nIn the waiting state , because the other member does not have any input, at this time the server corresponds to the value of the other party’s message and the value of the message itself, so it can be used to determine whether it is in the waiting state.<br>\nIn the wait state, all we need to do is wait, so I set up a sleep three-second refresh to wait for input from the other member.<br>\nIn the input state, we need to refresh the value of the message and then update the corresponding value on the server based on the new input.</li>\n<li>when ending the chat by typing ‘end’, the server needs to be cleared for the next time.<br>\n! <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01hZ2dpZVJ1eWkvTWFnZ2llUnV5aS5naXRodWIuaW8vc3JjL2ltYWdlL2NvbXAuanBlZw==\"></span></li>\n</ol>\n","site":{"data":{}},"length":2363,"excerpt":"","more":"<hr>\n<h1 id=\"interactive-systems\"><a class=\"markdownIt-Anchor\" href=\"#interactive-systems\">#</a> Interactive Systems</h1>\n<hr>\n<h2 id=\"what-is-an-interactive-system\"><a class=\"markdownIt-Anchor\" href=\"#what-is-an-interactive-system\">#</a> “What is an interactive system?”</h2>\n<p>A distributed system is a system whose components are located on different networked computers that communicate and coordinate their actions by passing information from any system to each other. The components interact with each other to achieve a common goal.<br>\nDistributed systems allow for the sharing of resources, including software shared by systems connected to the network. Examples of distributed systems/applications of distributed computing: intranet, internet, WWW, e-mail. Telecommunication networks. Telephone networks and cellular networks.</p>\n<h2 id=\"make-a-simple-distributed-system\"><a class=\"markdownIt-Anchor\" href=\"#make-a-simple-distributed-system\">#</a> “Make a simple distributed system.”</h2>\n<ul>\n<li><strong>Program Design</strong>:</li>\n</ul>\n<ol>\n<li>only one pair of people can use this chat system</li>\n<li>the first person to open the system is client1st and the second person to open the system is clent2nd.</li>\n<li>each person can only type one message at a time, and then they must wait for the other person to reply.</li>\n<li>while one person is typing, the other person must wait.</li>\n<li>type end to end the program.</li>\n</ol>\n<ul>\n<li><strong>Cautions for using this program</strong>:</li>\n</ul>\n<ol>\n<li>the same string cannot be entered consecutively by one person or it will be considered as no input. It is regarded as no input.</li>\n<li>line breaks cannot be entered</li>\n<li>both people must type ‘end’ to end the chat.</li>\n</ol>\n<ul>\n<li><strong>Structural Framework</strong>:</li>\n</ul>\n<ol>\n<li>the length of the key in the server is used to determine if it is the first member because if the length is 1, the server is empty, then no one has opened the chat and typed in a message before, then the member is client1st.</li>\n<li>it is then necessary to determine if the user wants to chat, i.e. to determine if “end” has been entered.</li>\n<li>the first input needs to be presented in a separate category with a welcome message in it to remind the user if it is client1st or client2nd. so there are two ways to determine if it is the first input and read it, the first is to directly determine message1 and message2 the second is to determine if the keys in the server are the same as the message (note that the key value taken from the server (Note that the string taken from the server will have an extra ‘\\n’ after decoding, so it can’t be judged directly, and ‘\\n’ should be added to judge it.</li>\n<li>After that, we need to clarify the representation and judgment of two states, one is input and the other is waiting.<br>\nIn the waiting state , because the other member does not have any input, at this time the server corresponds to the value of the other party’s message and the value of the message itself, so it can be used to determine whether it is in the waiting state.<br>\nIn the wait state, all we need to do is wait, so I set up a sleep three-second refresh to wait for input from the other member.<br>\nIn the input state, we need to refresh the value of the message and then update the corresponding value on the server based on the new input.</li>\n<li>when ending the chat by typing ‘end’, the server needs to be cleared for the next time.<br>\n! <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01hZ2dpZVJ1eWkvTWFnZ2llUnV5aS5naXRodWIuaW8vc3JjL2ltYWdlL2NvbXAuanBlZw==\"></span></li>\n</ol>\n"},{"title":"Search Engine","date":"2022-05-19T11:07:27.000Z","cover":"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/room.jpeg","_content":" - - - - - - - - - - - - - - - - - - - - - -\n# Search Engine In a Room (Bob)\n---\n## Prolog\nProlog is a high-level programming language that is primarily used for symbolic reasoning and manipulation. It is particularly well-suited for tasks related to artificial intelligence and knowledge representation. Here's a basic explanation of Prolog:\n\n1.Declarative Language: Prolog is a declarative language, which means that you describe the problem to be solved rather than specifying the step-by-step procedure for solving it. You state what you want to achieve, and Prolog's inference engine figures out how to achieve it.\n\n2.Rule-Based: In Prolog, you define rules and facts. Rules describe relationships and conditions, while facts provide specific information. These rules and facts are used to represent knowledge and relationships in a program.\n\n3.Logical Inference: Prolog uses a form of logical inference called backward chaining. When you query a Prolog program with a question or a goal, the system works backward through the rules and facts to find a solution. It explores the rules to determine how to satisfy the query.\n\n4.Pattern Matching: Prolog uses pattern matching to unify terms. Unification is the process of matching variables in rules and facts to find a consistent set of values that satisfy the query.\n\n5.Recursion: Recursion is a fundamental concept in Prolog. It allows you to express repetitive operations and solve problems through recursive rules and queries.\n\n6.return multiple solutions to a query if they exist. This feature is useful for exploring various possibilities.\n\n7.Applications: Prolog is commonly used in fields such as natural language processing, expert systems, knowledge representation, and constraint logic programming. It is also employed in areas like decision support systems and semantic web applications.\n\n8.Syntax: Prolog programs consist of clauses, which include facts and rules. Clauses end with periods. Variables are represented with uppercase letters, and atoms (constants) start with lowercase letters. Predicates are used to define relationships and goals.\n\nHere's a simple example in Prolog:\n\nprolog\nCopy code\n/* Facts */\nmammal(cat).\nmammal(dog).\n\n/* Rules */\nhas_fur(X) :- mammal(X).\n\n/* Query */\n?- has_fur(cat).\nIn this example, we have defined facts (mammals are cat and dog) and a rule (has_fur) that relates mammals to the presence of fur. The query \"?- has_fur(cat).\" asks whether a cat has fur, and Prolog would respond with \"true\" based on the facts and rules provided.\n\n\n! [](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/prolog.png)","source":"_posts/Search_engine_in_a_room.md","raw":"---\ntitle: Search Engine\ndate: 2022-05-19 12:07:27\ntags: 【System】\ncover: https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/room.jpeg\n--- - - - - - - - - - - - - - - - - - - - - - -\n# Search Engine In a Room (Bob)\n---\n## Prolog\nProlog is a high-level programming language that is primarily used for symbolic reasoning and manipulation. It is particularly well-suited for tasks related to artificial intelligence and knowledge representation. Here's a basic explanation of Prolog:\n\n1.Declarative Language: Prolog is a declarative language, which means that you describe the problem to be solved rather than specifying the step-by-step procedure for solving it. You state what you want to achieve, and Prolog's inference engine figures out how to achieve it.\n\n2.Rule-Based: In Prolog, you define rules and facts. Rules describe relationships and conditions, while facts provide specific information. These rules and facts are used to represent knowledge and relationships in a program.\n\n3.Logical Inference: Prolog uses a form of logical inference called backward chaining. When you query a Prolog program with a question or a goal, the system works backward through the rules and facts to find a solution. It explores the rules to determine how to satisfy the query.\n\n4.Pattern Matching: Prolog uses pattern matching to unify terms. Unification is the process of matching variables in rules and facts to find a consistent set of values that satisfy the query.\n\n5.Recursion: Recursion is a fundamental concept in Prolog. It allows you to express repetitive operations and solve problems through recursive rules and queries.\n\n6.return multiple solutions to a query if they exist. This feature is useful for exploring various possibilities.\n\n7.Applications: Prolog is commonly used in fields such as natural language processing, expert systems, knowledge representation, and constraint logic programming. It is also employed in areas like decision support systems and semantic web applications.\n\n8.Syntax: Prolog programs consist of clauses, which include facts and rules. Clauses end with periods. Variables are represented with uppercase letters, and atoms (constants) start with lowercase letters. Predicates are used to define relationships and goals.\n\nHere's a simple example in Prolog:\n\nprolog\nCopy code\n/* Facts */\nmammal(cat).\nmammal(dog).\n\n/* Rules */\nhas_fur(X) :- mammal(X).\n\n/* Query */\n?- has_fur(cat).\nIn this example, we have defined facts (mammals are cat and dog) and a rule (has_fur) that relates mammals to the presence of fur. The query \"?- has_fur(cat).\" asks whether a cat has fur, and Prolog would respond with \"true\" based on the facts and rules provided.\n\n\n! [](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/prolog.png)","slug":"Search_engine_in_a_room","published":1,"updated":"2023-10-27T09:05:27.838Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8e1f5k0000nyjgfa103bb3","content":"<hr>\n<h1 id=\"search-engine-in-a-room-bob\"><a class=\"markdownIt-Anchor\" href=\"#search-engine-in-a-room-bob\">#</a> Search Engine In a Room (Bob)</h1>\n<hr>\n<h2 id=\"prolog\"><a class=\"markdownIt-Anchor\" href=\"#prolog\">#</a> Prolog</h2>\n<p>Prolog is a high-level programming language that is primarily used for symbolic reasoning and manipulation. It is particularly well-suited for tasks related to artificial intelligence and knowledge representation. Here’s a basic explanation of Prolog:</p>\n<p>1.Declarative Language: Prolog is a declarative language, which means that you describe the problem to be solved rather than specifying the step-by-step procedure for solving it. You state what you want to achieve, and Prolog’s inference engine figures out how to achieve it.</p>\n<p>2.Rule-Based: In Prolog, you define rules and facts. Rules describe relationships and conditions, while facts provide specific information. These rules and facts are used to represent knowledge and relationships in a program.</p>\n<p>3.Logical Inference: Prolog uses a form of logical inference called backward chaining. When you query a Prolog program with a question or a goal, the system works backward through the rules and facts to find a solution. It explores the rules to determine how to satisfy the query.</p>\n<p>4.Pattern Matching: Prolog uses pattern matching to unify terms. Unification is the process of matching variables in rules and facts to find a consistent set of values that satisfy the query.</p>\n<p>5.Recursion: Recursion is a fundamental concept in Prolog. It allows you to express repetitive operations and solve problems through recursive rules and queries.</p>\n<p>6.return multiple solutions to a query if they exist. This feature is useful for exploring various possibilities.</p>\n<p>7.Applications: Prolog is commonly used in fields such as natural language processing, expert systems, knowledge representation, and constraint logic programming. It is also employed in areas like decision support systems and semantic web applications.</p>\n<p>8.Syntax: Prolog programs consist of clauses, which include facts and rules. Clauses end with periods. Variables are represented with uppercase letters, and atoms (constants) start with lowercase letters. Predicates are used to define relationships and goals.</p>\n<p>Here’s a simple example in Prolog:</p>\n<p>prolog<br>\nCopy code<br>\n/* Facts */<br>\nmammal(cat).<br>\nmammal(dog).</p>\n<p>/* Rules */<br>\nhas_fur(X) :- mammal(X).</p>\n<p>/* Query */<br>\n?- has_fur(cat).<br>\nIn this example, we have defined facts (mammals are cat and dog) and a rule (has_fur) that relates mammals to the presence of fur. The query “?- has_fur(cat).” asks whether a cat has fur, and Prolog would respond with “true” based on the facts and rules provided.</p>\n<p>! <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01hZ2dpZVJ1eWkvTWFnZ2llUnV5aS5naXRodWIuaW8vc3JjL2ltYWdlL3Byb2xvZy5wbmc=\"></span></p>\n","site":{"data":{}},"length":2099,"excerpt":"","more":"<hr>\n<h1 id=\"search-engine-in-a-room-bob\"><a class=\"markdownIt-Anchor\" href=\"#search-engine-in-a-room-bob\">#</a> Search Engine In a Room (Bob)</h1>\n<hr>\n<h2 id=\"prolog\"><a class=\"markdownIt-Anchor\" href=\"#prolog\">#</a> Prolog</h2>\n<p>Prolog is a high-level programming language that is primarily used for symbolic reasoning and manipulation. It is particularly well-suited for tasks related to artificial intelligence and knowledge representation. Here’s a basic explanation of Prolog:</p>\n<p>1.Declarative Language: Prolog is a declarative language, which means that you describe the problem to be solved rather than specifying the step-by-step procedure for solving it. You state what you want to achieve, and Prolog’s inference engine figures out how to achieve it.</p>\n<p>2.Rule-Based: In Prolog, you define rules and facts. Rules describe relationships and conditions, while facts provide specific information. These rules and facts are used to represent knowledge and relationships in a program.</p>\n<p>3.Logical Inference: Prolog uses a form of logical inference called backward chaining. When you query a Prolog program with a question or a goal, the system works backward through the rules and facts to find a solution. It explores the rules to determine how to satisfy the query.</p>\n<p>4.Pattern Matching: Prolog uses pattern matching to unify terms. Unification is the process of matching variables in rules and facts to find a consistent set of values that satisfy the query.</p>\n<p>5.Recursion: Recursion is a fundamental concept in Prolog. It allows you to express repetitive operations and solve problems through recursive rules and queries.</p>\n<p>6.return multiple solutions to a query if they exist. This feature is useful for exploring various possibilities.</p>\n<p>7.Applications: Prolog is commonly used in fields such as natural language processing, expert systems, knowledge representation, and constraint logic programming. It is also employed in areas like decision support systems and semantic web applications.</p>\n<p>8.Syntax: Prolog programs consist of clauses, which include facts and rules. Clauses end with periods. Variables are represented with uppercase letters, and atoms (constants) start with lowercase letters. Predicates are used to define relationships and goals.</p>\n<p>Here’s a simple example in Prolog:</p>\n<p>prolog<br>\nCopy code<br>\n/* Facts */<br>\nmammal(cat).<br>\nmammal(dog).</p>\n<p>/* Rules */<br>\nhas_fur(X) :- mammal(X).</p>\n<p>/* Query */<br>\n?- has_fur(cat).<br>\nIn this example, we have defined facts (mammals are cat and dog) and a rule (has_fur) that relates mammals to the presence of fur. The query “?- has_fur(cat).” asks whether a cat has fur, and Prolog would respond with “true” based on the facts and rules provided.</p>\n<p>! <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01hZ2dpZVJ1eWkvTWFnZ2llUnV5aS5naXRodWIuaW8vc3JjL2ltYWdlL3Byb2xvZy5wbmc=\"></span></p>\n"},{"title":"Features for Estimating Autonomous Vehicle Poses","date":"2022-05-30T11:07:27.000Z","cover":"https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/vis.jpeg","_content":" - - - - - - - - - - - - - - - - - - - - - -\n# Features for Estimating Autonomous Vehicle Poses\n---\n## Problem Explaination\nimplement and compare three different strategies for matching visual\nfeatures in a series of images captured during the navigation of an autonomous vehicle (AV).\nThese features are used in estimating poses (i.e., camera trajectories) based on a visual\nodometry algorithm. Below are some terms and their definitions to help clarify some concepts\nin autonomous robot navigation.\nOdometry is the use of sensors to estimate a robot's change in position relative to a known\nposition. Visual odometry (VO) is a specific type of odometry where only cameras are used as\nsensors, as opposed to using, e.g., global positioning system (GPS) sensors or light detection\nand ranging (LIDAR) sensors. It is based on the analysis of a sequence of camera images.\nSimultaneous localisation and mapping (SLAM) is a task whereby a robot needs to build a\nmap of its current environment while at the same time trying to determine its position relative\nto that map.\n\n\n! [](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/vis1.jpeg)","source":"_posts/Vehicle_Poses.md","raw":"---\ntitle: Features for Estimating Autonomous Vehicle Poses\ndate: 2022-05-30 12:07:27\ntags: 【System】\ncover: https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/vis.jpeg\n--- - - - - - - - - - - - - - - - - - - - - - -\n# Features for Estimating Autonomous Vehicle Poses\n---\n## Problem Explaination\nimplement and compare three different strategies for matching visual\nfeatures in a series of images captured during the navigation of an autonomous vehicle (AV).\nThese features are used in estimating poses (i.e., camera trajectories) based on a visual\nodometry algorithm. Below are some terms and their definitions to help clarify some concepts\nin autonomous robot navigation.\nOdometry is the use of sensors to estimate a robot's change in position relative to a known\nposition. Visual odometry (VO) is a specific type of odometry where only cameras are used as\nsensors, as opposed to using, e.g., global positioning system (GPS) sensors or light detection\nand ranging (LIDAR) sensors. It is based on the analysis of a sequence of camera images.\nSimultaneous localisation and mapping (SLAM) is a task whereby a robot needs to build a\nmap of its current environment while at the same time trying to determine its position relative\nto that map.\n\n\n! [](https://raw.githubusercontent.com/MaggieRuyi/MaggieRuyi.github.io/src/image/vis1.jpeg)","slug":"Vehicle_Poses","published":1,"updated":"2023-10-27T09:15:44.894Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clo8eeo650000u8jg2mxpd9o5","content":"<hr>\n<h1 id=\"features-for-estimating-autonomous-vehicle-poses\"><a class=\"markdownIt-Anchor\" href=\"#features-for-estimating-autonomous-vehicle-poses\">#</a> Features for Estimating Autonomous Vehicle Poses</h1>\n<hr>\n<h2 id=\"problem-explaination\"><a class=\"markdownIt-Anchor\" href=\"#problem-explaination\">#</a> Problem Explaination</h2>\n<p>implement and compare three different strategies for matching visual<br>\nfeatures in a series of images captured during the navigation of an autonomous vehicle (AV).<br>\nThese features are used in estimating poses (i.e., camera trajectories) based on a visual<br>\nodometry algorithm. Below are some terms and their definitions to help clarify some concepts<br>\nin autonomous robot navigation.<br>\nOdometry is the use of sensors to estimate a robot’s change in position relative to a known<br>\nposition. Visual odometry (VO) is a specific type of odometry where only cameras are used as<br>\nsensors, as opposed to using, e.g., global positioning system (GPS) sensors or light detection<br>\nand ranging (LIDAR) sensors. It is based on the analysis of a sequence of camera images.<br>\nSimultaneous localisation and mapping (SLAM) is a task whereby a robot needs to build a<br>\nmap of its current environment while at the same time trying to determine its position relative<br>\nto that map.</p>\n<p>! <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01hZ2dpZVJ1eWkvTWFnZ2llUnV5aS5naXRodWIuaW8vc3JjL2ltYWdlL3ZpczEuanBlZw==\"></span></p>\n","site":{"data":{}},"length":855,"excerpt":"","more":"<hr>\n<h1 id=\"features-for-estimating-autonomous-vehicle-poses\"><a class=\"markdownIt-Anchor\" href=\"#features-for-estimating-autonomous-vehicle-poses\">#</a> Features for Estimating Autonomous Vehicle Poses</h1>\n<hr>\n<h2 id=\"problem-explaination\"><a class=\"markdownIt-Anchor\" href=\"#problem-explaination\">#</a> Problem Explaination</h2>\n<p>implement and compare three different strategies for matching visual<br>\nfeatures in a series of images captured during the navigation of an autonomous vehicle (AV).<br>\nThese features are used in estimating poses (i.e., camera trajectories) based on a visual<br>\nodometry algorithm. Below are some terms and their definitions to help clarify some concepts<br>\nin autonomous robot navigation.<br>\nOdometry is the use of sensors to estimate a robot’s change in position relative to a known<br>\nposition. Visual odometry (VO) is a specific type of odometry where only cameras are used as<br>\nsensors, as opposed to using, e.g., global positioning system (GPS) sensors or light detection<br>\nand ranging (LIDAR) sensors. It is based on the analysis of a sequence of camera images.<br>\nSimultaneous localisation and mapping (SLAM) is a task whereby a robot needs to build a<br>\nmap of its current environment while at the same time trying to determine its position relative<br>\nto that map.</p>\n<p>! <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01hZ2dpZVJ1eWkvTWFnZ2llUnV5aS5naXRodWIuaW8vc3JjL2ltYWdlL3ZpczEuanBlZw==\"></span></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clo8avyz2000018jg1tebcznt","tag_id":"clo8avyzb000118jg5f1dadu2","_id":"clo8avyze000218jg3hfjh729"},{"post_id":"clo8b6q5800006mjgfjm6gcp9","tag_id":"clo8avyzb000118jg5f1dadu2","_id":"clo8b6q5h00016mjga8h42cgx"},{"post_id":"clo8bw5it0000hcjg2t5x25l8","tag_id":"clo8avyzb000118jg5f1dadu2","_id":"clo8bw5j20001hcjg60ju928e"},{"post_id":"clo8cole10000y1jghtyr22zz","tag_id":"clo8coled0001y1jg6lqw6kc4","_id":"clo8coleg0002y1jg88i31jxl"},{"post_id":"clo8cy2ga000032jg5lue089c","tag_id":"clo8coled0001y1jg6lqw6kc4","_id":"clo8cy2gf000132jg00a54z6u"},{"post_id":"clo8e1f5k0000nyjgfa103bb3","tag_id":"clo8coled0001y1jg6lqw6kc4","_id":"clo8e1f5q0001nyjg1kod3rds"},{"post_id":"clo8eeo650000u8jg2mxpd9o5","tag_id":"clo8coled0001y1jg6lqw6kc4","_id":"clo8eeo6a0001u8jg2e2kcvtj"}],"Tag":[{"name":"【交互式系统】","_id":"clo86j4520001q1jg6vcn0t3n"},{"name":"【GAME】","_id":"clo8avyzb000118jg5f1dadu2"},{"name":"【System】","_id":"clo8coled0001y1jg6lqw6kc4"}]}}